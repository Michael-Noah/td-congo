{"version":3,"sources":["pages/ModalPages/AddCustomer/AddCustomer.js","pages/customers/Customers.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutWrapper.js","../../../shared/assets/styles/constants.js","../../../shared/components/utility/boxTitle.style.js","../../../shared/components/utility/boxTitle.js","../../../shared/components/utility/box.style.js","../../../shared/components/utility/box.js","../../../shared/library/helpers/ItemSearchString.js","../../../shared/redux/customers/actionCreators.js"],"names":["AddCustomerModal","this","props","visible","confirm","submit","cancel","data","console","log","title","onOk","onCancel","gutter","className","span","onChange","changed","type","name","value","placeholder","prefix","UserOutlined","suffix","InfoCircleOutlined","style","color","React","Component","styles","PageStyle","display","flexFlow","alignItems","overflow","tabsStyle","height","overflowY","outTableStyle","Customers","state","searchQuery","filteredInfo","sortedInfo","addCustomerData","contact","editCustomerData","addModal","editModal","toggleAddModal","setState","prevState","submitCustomerData","handleTableChanges","pagination","filters","sorter","addCustomerDataChanged","evt","target","dispatch","customerList","customersActions","columns","dataIndex","key","width","ellipsis","a","b","localeCompare","ignorePunctuation","sensitivity","defaultSortOrder","attachment","render","epoch","action","onConfirm","danger","customerItems","Object","keys","map","customer","customerItem","customerSearchParams","trim","itemExistsInAny","push","location","date","Date","time","toLocaleString","day","month","year","hour","minute","basicStyle","rowStyle","lg","colStyle","marginBottom","onClick","block","size","e","loading","dataSource","connect","customers","token","Auth","idToken","LayoutContentWrapper","styled","div","children","paddingBottom","BoxTitle","h3","palette","BoxSubTitle","p","subtitle","BoxWrapper","arraysToSearch","searchString","some","element","toLowerCase","includes","getCustomers","actions","rtdb","ref","orderByChild","on","snapshot","forEach","child","x","val","toUpperCase","getCustomersSuccess","GET_CUSTOMERS"],"mappings":"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","file":"static/js/23.2e901d88.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Input, Modal, Row, Tooltip } from 'antd';\r\nimport { InfoCircleOutlined, UserOutlined } from '@ant-design/icons';\r\n\r\nclass AddCustomerModal extends React.Component {\r\n\r\n\r\n    render() {\r\n\r\n\r\n        const { visible, confirm, submit, cancel, data } = this.props;\r\n        console.log(data);\r\n        return (\r\n            <>\r\n                <Modal\r\n                    title=\"Add a Customer\"\r\n                    visible={visible}\r\n                    onOk={submit}\r\n                    confirm={confirm}\r\n                    onCancel={cancel}\r\n                >\r\n                    <Row gutter={[16, 16]}>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <Input\r\n                                onChange={this.props.changed}\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                placeholder=\"Enter Customer Name\"\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                suffix={\r\n                                    <Tooltip title=\"Extra information\">\r\n                                        <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                    </Tooltip>\r\n                                }\r\n                            />\r\n                        </Col>\r\n                        <Col className=\"gutter-row\" span={12}>\r\n                            <Input\r\n                                onChange={this.props.changed}\r\n                                type=\"text\"\r\n                                name=\"contact\"\r\n                                value={data.name}\r\n                                placeholder=\"Enter Customer Contact\"\r\n                                prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n                                suffix={\r\n                                    <Tooltip title=\"Extra information\">\r\n                                        <InfoCircleOutlined style={{ color: 'rgba(0,0,0,.45)' }} />\r\n                                    </Tooltip>\r\n                                }\r\n                            />\r\n                        </Col>\r\n                    </Row>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport { AddCustomerModal };","import React, { Component } from 'react';\r\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\r\nimport basicStyle from '@iso/assets/styles/constants';\r\nimport * as customersActions from '@iso/redux/customers/actionCreators';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Col, Input, Popconfirm, Row, Space, Table } from 'antd';\r\nimport { itemExistsInAny } from '@iso/lib/helpers/ItemSearchString';\r\nimport Box from '@iso/components/utility/box';\r\nimport { AddCustomerModal } from '../ModalPages/AddCustomer/AddCustomer';\r\n\r\nconst styles = {\r\n    PageStyle: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap',\r\n        alignItems: 'flex-start',\r\n        overflow: 'hidden',\r\n    },\r\n    tabsStyle: {\r\n        height: '70vh', overflowY: 'scroll', overflow: 'auto'\r\n    },\r\n\r\n    outTableStyle: {\r\n        overflowY: 'scroll', overflow: 'auto', height: \"35vh\"\r\n    },\r\n};\r\n\r\n\r\n\r\n\r\n\r\nclass Customers extends Component {\r\n\r\n    state = {\r\n        searchQuery: \"\",\r\n        filteredInfo: null,\r\n        sortedInfo: null,\r\n        addCustomerData: {\r\n            name: \"\", contact: \"\",\r\n        },\r\n        editCustomerData: {\r\n            name: \"\", contact: \"\",\r\n        },\r\n        addModal: false,\r\n        editModal: false,\r\n    }\r\n\r\n\r\n    toggleAddModal = () => {\r\n        this.setState((prevState) => ({\r\n            addModal: !prevState.addModal\r\n        }));\r\n    }\r\n\r\n    submitCustomerData = () => {\r\n        this.toggleAddModal();\r\n\r\n    }\r\n\r\n    handleTableChanges = (pagination, filters, sorter) => {\r\n        this.setState({\r\n            filteredInfo: filters,\r\n            sortedInfo: sorter,\r\n        });\r\n    };\r\n\r\n    addCustomerDataChanged = (evt) => {\r\n        let name = evt.target.name;\r\n        let value = evt.target.value;\r\n        this.setState((prevState) => ({\r\n            addCustomerData: {\r\n                ...prevState.addCustomerData,\r\n                [name]: value,\r\n            }\r\n        }));\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        let { dispatch } = this.props;\r\n        !this.props.customerList && dispatch(customersActions.getCustomers());\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const columns = [\r\n            {\r\n                title: 'NAME',\r\n                dataIndex: 'name',\r\n                key: 'name',\r\n                width: '15%',\r\n                ellipsis: true,\r\n                sorter: (a, b) => a.name.localeCompare(b.name, { ignorePunctuation: true, sensitivity: 'base' }),\r\n                defaultSortOrder: 'ascend'\r\n            },\r\n            {\r\n                title: 'ATTACHMENT',\r\n                dataIndex: 'attachment',\r\n                key: 'attachment',\r\n                ellipsis: true,\r\n                sorter: (a, b) => a.attachment.localeCompare(b.attachment, { ignorePunctuation: true, sensitivity: 'base' }),\r\n            },\r\n            {\r\n                title: 'CONTACT',\r\n                dataIndex: 'contact',\r\n                key: 'contact',\r\n                width: '12%',\r\n                sorter: (a, b) => a.contact.localeCompare(b.contact, { ignorePunctuation: true, sensitivity: 'base' }),\r\n                render: (contact) => contact ? contact : 'NONE SET'\r\n            },\r\n            {\r\n                title: 'ENTRY DATE',\r\n                dataIndex: 'date',\r\n                key: 'epoch',\r\n                sorter: (a, b) => a.epoch - b.epoch,\r\n            },\r\n            {\r\n                title: 'ACTION',\r\n                dataIndex: 'action',\r\n                key: 'action',\r\n                width: '15%',\r\n                render: (action) => {\r\n                    return (<Popconfirm title={`Confirm ${action}?`} onConfirm={() => { }}>\r\n                        <Button type=\"primary\" danger>{action}</Button>\r\n                    </Popconfirm>\r\n                    )\r\n                }\r\n            },\r\n        ];\r\n\r\n        let customerItems = [];\r\n        if (this.props.customerList) {\r\n            Object.keys(this.props.customerList).map((customer) => {\r\n                let dateConfig = { day: '2-digit', month: '2-digit', year: 'numeric', hour: '2-digit', minute: '2-digit' };\r\n                let customerItem = this.props.customerList[customer];\r\n                let customerSearchParams = [(customerItem.name).trim(), (customerItem.contact).trim()];\r\n                if (itemExistsInAny(customerSearchParams, this.state.searchQuery)) {\r\n                    customerItems.push({\r\n                        key: customer,\r\n                        name: (customerItem.name).trim(),\r\n                        attachment: customerItem.location,\r\n                        contact: customerItem.contact,\r\n                        date: new Date(customerItem.time).toLocaleString([], dateConfig),\r\n                        epoch: customerItem.time,\r\n                        action: \"Delete\",\r\n                    })\r\n                };\r\n                return null;\r\n            })\r\n        }\r\n        return (\r\n            <>\r\n            <AddCustomerModal \r\n            visible={this.state.addModal} \r\n            data={this.state.addCustomerData} \r\n            changed={this.addCustomerDataChanged}\r\n            confirm={this.submitCustomerData}\r\n            cancel={this.toggleAddModal}/>\r\n                <LayoutContentWrapper style={styles.PageStyle}>\r\n                    <Row style={basicStyle.rowStyle}>\r\n                        <Col lg={24} style={basicStyle.colStyle}>\r\n                            <Box title=\"Customers\">\r\n                                <Space style={{ marginBottom: 16 }}>\r\n                                    <Button onClick={this.toggleAddModal} className=\"btn-success\" block size=\"large\">ADD CUSTOMER</Button>\r\n                                </Space>\r\n                                <Input size=\"large\" type=\"search\" placeholder=\"search\" value={this.state.searchQuery} onChange={(e) => { this.setState({ searchQuery: e.target.value }) }} />\r\n                                <Table loading={!this.props.customerList} size=\"small\" pagination={true} dataSource={customerItems} columns={columns} onChange={this.handleTableChanges} />\r\n                            </Box>\r\n                        </Col>\r\n                    </Row>\r\n                </LayoutContentWrapper>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    let { ...customers } = state.Customers;\r\n    return {\r\n        token: state.Auth.idToken,\r\n        customerList: customers.customerList,\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Customers);","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n  paddingBottom: '5px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxTitle = styled.h3`\n  font-size: 14px;\n  font-weight: 500;\n  color: ${palette('text', 0)};\n  margin: 0;\n  margin-bottom: 5px;\n`;\n\nconst BoxSubTitle = styled.p`\n  font-size: 13px;\n  font-weight: 400;\n  color: ${palette('text', 3)};\n  line-height: 24px;\n`;\n\nexport { BoxTitle, BoxSubTitle };\n","import React from 'react';\nimport { BoxTitle, BoxSubTitle } from './boxTitle.style';\n\nexport default props => {\n  return (\n    <div>\n      {props.title ? (\n        <BoxTitle className=\"isoBoxTitle\"> {props.title} </BoxTitle>\n      ) : (\n        ''\n      )}\n      {props.subtitle ? (\n        <BoxSubTitle className=\"isoBoxSubTitle\"> {props.subtitle} </BoxSubTitle>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n};\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst BoxWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 0)};\n  margin: 0 0 30px;\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n\n  @media only screen and (max-width: 767px) {\n    padding: 20px;\n    ${'' /* margin: 0 10px 30px; */};\n  }\n\n  &.half {\n    width: calc(50% - 34px);\n    @media (max-width: 767px) {\n      width: 100%;\n    }\n  }\n`;\n\nexport { BoxWrapper };\n","import React from 'react';\nimport BoxTitleWrapper from './boxTitle';\nimport { BoxWrapper } from './box.style';\n\nexport default props => (\n  <BoxWrapper\n    className={`${props.className ? props.className : ''} isoBoxWrapper`}\n    style={props.style}\n  >\n    <BoxTitleWrapper title={props.title} subtitle={props.subtitle} />\n    {props.children}\n  </BoxWrapper>\n);\n","export const itemExistsInAny = (arraysToSearch,searchString) => {\r\nreturn arraysToSearch.some(element => {\r\n        return ((element.toLowerCase()).includes(searchString.toLowerCase()))\r\n    });\r\n}\r\n\r\nexport const itemExistsInEvery = (arraysToSearch,searchString) => {\r\n    \r\n    return arraysToSearch.every(element => {\r\n            return ((element.toLowerCase()).includes(searchString.toLowerCase()))\r\n        });\r\n    }","// import axios from \"@iso/config/axios-config/axios-instance\";\r\nimport actions from './actions';\r\nimport { rtdb } from \"../../library/firebase/firebase\";\r\n\r\n\r\n\r\nexport const getCustomers = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getCustomers());\r\n        let customers = rtdb.ref(`customers/HeadQuarters/`);\r\n        customers.orderByChild('name').on('value', (snapshot) => {\r\n            let data = [];\r\n            snapshot.forEach(child => {\r\n                let x = child.val();\r\n                x = { ...x, name: x.name.toUpperCase() }\r\n                data.push(x);\r\n            })\r\n            dispatch(actions.getCustomersSuccess(data, actions.GET_CUSTOMERS));\r\n        });\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}