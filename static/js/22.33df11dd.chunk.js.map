{"version":3,"sources":["../../../shared/containers/Widgets/Report/ReportWidget.styles.js","../../../shared/containers/Widgets/Report/ReportWidget.js","../../../shared/containers/Widgets/Widgets.styles.js","../../../shared/containers/Widgets/WidgetsWrapper.js","../../../shared/config/axios-config/axios-instance.js","../../../shared/redux/categories/actions.js","../../../shared/containers/Widgets/Sticker/StickerWidget.styles.js","../../../shared/containers/Widgets/Sticker/StickerWidget.js","components/StatsWidget/StatsWidget.jsx","../../../shared/containers/Widgets/Sale/SaleWidget.styles.js","../../../shared/containers/Widgets/Sale/SaleWidget.js","components/SalesWidget/SalesWidget.jsx","pages/HomePage.js","../../../shared/redux/stats/actionCreators.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutWrapper.js","../../../shared/assets/styles/constants.js","components/SpinnerWidget/SpinnerWidget.jsx"],"names":["ReportWidgetWrapper","styled","div","palette","label","details","children","className","style","marginBottom","WidgetWrapper","props","width","gutterTop","gutterRight","gutterBottom","gutterLeft","padding","bgColor","height","align","getAlignContent","axiosInstance","axios","create","baseURL","handleCategories","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAIL","ADD_CATEGORIES","DELETE_CATEGORIES","UPDATE_CATEGORIES","getCategories","payload","type","getCategoriesbySaga","token","GET_CATEGORIES_BY_SAGA","getCategoriesSuccess","data","getCategoriesFail","addCategory","id","deleteCategory","updateCategory","value","StickerWidgetWrapper","borderRadius","fontColor","icon","number","text","textColor","color","widgetStyle","backgroundColor","StatsWidget","IconLib","StickerWidget","class","spaceSize","size","SaleWidgetWrapper","price","SalesWidget","amount","sign","SaleWidget","styles","PageStyle","display","flexFlow","alignItems","overflow","HomePage","this","dispatch","actions","getTransactions","rtdb","ref","on","snapshot","numTrans","Object","keys","val","length","getItemsSuccess","GET_NUMBER_TRANSACTIONS","getNumProducts","getNumServices","productsNum","servicesNum","inventory","map","item","salesActions","itemsSuccess","GET_PRODUCTS","GET_NUMBER_PRODUCTS","GET_NUMBER_SERVICES","error","console","log","getNumCustomers","orderByChild","forEach","child","x","name","toUpperCase","push","customersActions","getCustomersSuccess","GET_CUSTOMERS","GET_NUMBER_CUSTOMERS","getItemsFail","getNumVendors","vendorsActions","getVendorsSuccess","GET_VENDORS","GET_NUMBER_VENDORS","getNumUsers","GET_NUMBER_USERS","getNumLocations","locationActions","getLocationsSuccess","GET_LOCATIONS","GET_NUMBER_LOCATIONS","getNumCategories","categoriesActions","GET_NUMBER_CATEGORIES","getState","getNumRevenueYTD","getNumRevenueMonth","getNumRevenuePrevMonth","getTransactionsByUser","dat","Date","yearStart","UTC","getFullYear","getTime","get","then","response","countAnnual","lastMonth","currentMonth","myTransactions","order","orderDate","time","parseFloat","bill","grandtotal","getMonth","cashier","Auth","uid","GET_REVENUE_YTD","GET_REVENUE_PREV_MONTH","GET_REVENUE_MONTH","GET_TRANSACTIONS_USER","catch","statsActions","properties","basicStyle","rowStyle","gutter","justify","lg","md","sm","xs","colStyle","numTransactions","fontSize","numProducts","numServices","numCustomers","numVendors","numUsers","numLocations","numCategories","numRevenueMonth","numRevenuePrevMonth","numRevenueYTD","numTransactionsUser","Component","connect","state","stats","Stats","idToken","LayoutContentWrapper","paddingBottom","AppSpinner","SpaceSize"],"mappings":"08BAGA,IAAMA,EAAsBC,IAAOC,IAAV,IAMHC,kBAAQ,SAAU,GAI3BA,kBAAQ,OAAQ,GAsBhBA,kBAAQ,OAAQ,IChCd,cAAwC,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,SACxC,OACE,kBAACN,EAAD,CAAqBO,UAAU,mBAAmBC,MAAO,CAACC,aAAc,SACtE,wBAAIF,UAAU,kBAAkBH,GAEhC,yBAAKG,UAAU,uBAAuBD,GAEtC,uBAAGC,UAAU,kBAAkBF,K,82BCPrC,IAAMK,EAAgBT,IAAOC,IAAV,KAER,SAAAS,GAAK,OAAIA,EAAMC,SACV,SAAAD,GAAK,OAAIA,EAAME,aACb,SAAAF,GAAK,OAAIA,EAAMG,eACd,SAAAH,GAAK,OAAIA,EAAMI,gBACjB,SAAAJ,GAAK,OAAIA,EAAMK,cACnB,SAAAL,GAAK,OAAIA,EAAMM,WACN,SAAAN,GAAK,OAAIA,EAAMO,WCRtB,GDcGjB,IAAOC,IAAV,KAEH,SAAAS,GAAK,OAAKA,EAAMQ,OAAN,UAAkBR,EAAMQ,OAAxB,MAAqC,UAC9C,SAAAR,GAAK,OAAKA,EAAMM,QAAUN,EAAMM,QAAU,SAEjCd,kBAAQ,SAAU,IAYnBF,IAAOC,IAAV,KACC,SAAAS,GAAK,OANA,WAA2B,IAA1BS,EAAyB,uDAAjB,aAC/B,MAAc,UAAVA,EAA0B,aAChB,QAAVA,EAAwB,WACrBA,EAGmBC,CAAgBV,EAAMS,UAIlC,SAAAT,GAAK,OAAIA,EAAME,aACb,SAAAF,GAAK,OAAIA,EAAMG,eACd,SAAAH,GAAK,OAAIA,EAAMI,gBACjB,SAAAJ,GAAK,OAAIA,EAAMK,cACnB,SAAAL,GAAK,OAAIA,EAAMM,WACjB,SAAAN,GAAK,OAAIA,EAAMC,SCzCX,YAAkC,IAAvBN,EAAsB,EAAtBA,SAAaK,EAAS,4BAC9C,OACE,kBAACD,EAAD,eAAeH,UAAU,qBAAwBI,GAC9CL,K,mCCEQgB,E,OANOC,EAAMC,OACxB,CACIC,QAAS,4C,QCJXC,EAAmB,CAErBC,eAAgB,eAEhBC,uBAAwB,yBACxBC,oBAAqB,sBAErBC,eAAgB,uBAEhBC,kBAAmB,4BAEnBC,kBAAmB,0BAGnBC,cAAe,SAAAC,GACX,MAAO,CAAEC,KAAMT,EAAiBC,eAAgBO,YAEpDE,oBAAqB,SAAAC,GACjB,MAAO,CAAEF,KAAMT,EAAiBY,uBAAwBD,UAG5DE,qBAAsB,SAACL,EAASM,GAC5B,MAAO,CACHL,KAAMT,EAAiBE,uBACvBM,QAASA,EACTM,KAAMA,IAGdC,kBAAmB,SAACP,EAASM,GACzB,MAAO,CACHL,KAAMT,EAAiBG,oBACvBK,UACAM,KAAMA,IAIdE,YAAa,SAACR,EAASS,GACnB,MAAO,CACHR,KAAMT,EAAiBI,eACvBI,UACAS,GAAIA,IAGZC,eAAgB,SAACV,EAASS,GACtB,MAAO,CACHR,KAAMT,EAAiBK,kBACvBG,UACAS,GAAIA,IAGZE,eAAgB,SAACC,EAAOZ,GACpB,MAAO,CACHC,KAAMT,EAAiBM,kBACvBE,QAASA,KAMNR,I,gzBCxDf,IAAMqB,EAAuB9C,IAAOC,IAAV,IAKtB8C,YAAa,QCLF,cAA8D,IAAlDC,EAAiD,EAAjDA,UAAW/B,EAAsC,EAAtCA,QAASN,EAA6B,EAA7BA,MAAOsC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC5DC,EAAY,CAChBC,MAAOL,GAEHM,EAAc,CAClBC,gBAAiBtC,EACjBN,MAAOA,GAGT,OACE,kBAACmC,EAAD,CAAsBxC,UAAU,mBAAmBC,MAAO+C,GACxD,yBAAKhD,UAAU,kBAAkB2C,GAEjC,yBAAK3C,UAAU,qBACb,wBAAIA,UAAU,gBAAgBC,MAAO6C,GAClCF,GAEH,0BAAM5C,UAAU,WAAWC,MAAO6C,GAC/BD,M,SChBEK,EAAc,SAAC,GAAiD,IAA/CN,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,KAAMM,EAAgC,EAAhCA,QAAST,EAAuB,EAAvBA,UAAWK,EAAY,EAAZA,MAC5D,OACI,kBAAC,EAAD,KAEI,kBAACK,EAAD,CACIR,OAAQA,GAAUA,EAClBC,KAAMD,EAASC,EAAO,kBAAC,IAAD,CAAYQ,MAAM,IAAIC,UAAU,QAAQC,KAAK,UACnEZ,KAAMQ,EACNT,UAAWE,EAAQF,EAAW,OAC9B/B,QAASiC,EAASG,EAAQ,c,+nBCX1C,IAAMS,EAAoB9D,IAAOC,IAAV,IAODC,kBAAQ,SAAU,GAO3BA,kBAAQ,OAAQ,GAehBA,kBAAQ,OAAQ,IC7Bd,cAAgD,IAArC8C,EAAoC,EAApCA,UAAW7C,EAAyB,EAAzBA,MAAO4D,EAAkB,EAAlBA,MAAO3D,EAAW,EAAXA,QAC3CgD,EAAY,CAChBC,MAAOL,GAGT,OACE,kBAACc,EAAD,CAAmBxD,UAAU,iBAC3B,wBAAIA,UAAU,gBAAgBH,GAC9B,0BAAMG,UAAU,eAAeC,MAAO6C,GACnCW,GAEH,uBAAGzD,UAAU,kBAAkBF,KCTxB4D,EAAc,SAAC,GAAiD,IAA/C7D,EAA8C,EAA9CA,MAAO8D,EAAuC,EAAvCA,OAAQ7D,EAA+B,EAA/BA,QAAS4C,EAAsB,EAAtBA,UAAWkB,EAAW,EAAXA,KAC7D,OACI,kBAAC,EAAD,KACI,kBAACC,EAAD,CACIhE,MAAOA,EACP4D,MAAkB,OAAXE,EAAkBC,EAAO,IAAMD,EAAS,kBAAC,IAAD,CAAYJ,KAAK,QAAQD,UAAU,QAAQD,MAAM,MAChGvD,QAASA,EACT4C,UAAWA,MCGrBoB,EAAS,CACbC,UAAW,CACTC,QAAS,OACTC,SAAU,WACVC,WAAY,aACZC,SAAU,WAKRC,E,kLAIiB,IAAD,EACQC,KAAKjE,MAAzB0B,EADY,EACZA,MAAOwC,EADK,EACLA,SACbA,GCpBO,SAAAA,GACHA,EAASC,IAAQC,mBACJC,IAAKC,IAAL,aACNC,GAAG,SAAS,SAAAC,GACf,IAAIC,EAAWC,OAAOC,KAAKH,EAASI,OAAOC,OAC3CX,EAASC,IAAQW,gBAAgBL,EAAUN,IAAQY,gCDgB3Db,GCFO,SAAAA,GACHA,EAASC,IAAQa,kBACjBd,EAASC,IAAQc,kBACDZ,IAAKC,IAAI,oCACfC,GAAG,SAAS,SAAAC,GAClB,IAAIU,EAAc,EACdC,EAAc,EACdC,EAAYZ,EAASI,MACzBF,OAAOC,KAAKH,EAASI,OAAOS,KAAI,SAAAC,GAO5B,MANa,aAATA,EACAJ,GAAeR,OAAOC,KAAKS,EAAUE,IAAOT,OAG5CM,GAAeT,OAAOC,KAAKS,EAAUE,IAAOT,OAEzC,QAEXX,EAASqB,IAAaC,aAAahB,EAASI,MAAOW,IAAaE,eAChEvB,EAASC,IAAQW,gBAAgBI,EAAaf,IAAQuB,sBACtDxB,EAASC,IAAQW,gBAAgBK,EAAahB,IAAQwB,yBACvD,SAACC,GACAC,QAAQC,IAAI,UAAWF,SDlB/B1B,GC8DO,SAAAA,GACHA,EAASC,IAAQ4B,mBACD1B,IAAKC,IAAI,0BACf0B,aAAa,QAAQzB,GAAG,SAAS,SAAAC,GACvC,IAAI3C,EAAO,GACX2C,EAASyB,SAAQ,SAAAC,GACb,IAAIC,EAAID,EAAMtB,MACduB,EAAC,2BAAQA,GAAR,IAAWC,KAAMD,EAAEC,KAAKC,gBACzBxE,EAAKyE,KAAKH,MAEdjC,EAASqC,IAAiBC,oBAAoB3E,EAAM0E,IAAiBE,gBACrEvC,EAASC,IAAQW,gBAAgBjD,EAAKgD,OAAQV,IAAQuC,0BACvD,SAAAd,GACC1B,EAASC,IAAQwC,aAAaf,UD1EtC1B,GCuFO,SAAAA,GACHA,EAASC,IAAQyC,iBACHvC,IAAKC,IAAI,yBACfC,GAAG,SAAS,SAAAC,GAChBN,EAAS2C,IAAeC,kBAAkBtC,EAASI,MAAOiC,IAAeE,cACzE7C,EAASC,IAAQW,gBAAgBJ,OAAOC,KAAKH,EAASI,OAAOC,OAAQV,IAAQ6C,wBAC9E,SAAApB,GACC1B,EAASC,IAAQwC,aAAaf,UD7FtC1B,GC2GO,SAAAA,GACHA,EAASC,IAAQ8C,eACL5C,IAAKC,IAAI,SACfC,GAAG,SAAS,SAAAC,GACdN,EAASC,IAAQW,gBAAgBJ,OAAOC,KAAKH,EAASI,OAAOC,OAAQV,IAAQ+C,sBAC9E,SAAAtB,GACC1B,EAASC,IAAQwC,aAAaf,UDhHtC1B,GC0IO,SAAAA,GACHA,EAASC,IAAQgD,mBACD9C,IAAKC,IAAI,aACfC,GAAG,SAAS,SAAAC,GAClBN,EAASkD,IAAgBC,oBAAoB7C,EAASI,MAAOwC,IAAgBE,gBAC7EpD,EAASC,IAAQW,gBAAgBJ,OAAOC,KAAKH,EAASI,OAAOC,OAAQV,IAAQoD,0BAC9E,SAAA3B,GACC1B,EAASC,IAAQwC,aAAaf,UDhJtC1B,GC4HO,SAAAA,GACHA,EAASC,IAAQqD,oBACAnD,IAAKC,IAAI,cACfC,GAAG,SAAS,SAAAC,GACnBN,EAASuD,EAAkB7F,qBAAqB4C,EAASI,MAAO6C,EAAkBzG,iBAClFkD,EAASC,IAAQW,gBAAgBJ,OAAOC,KAAKH,EAASI,OAAOC,OAAQV,IAAQuD,2BAC9E,SAAA9B,GACC1B,EAASC,IAAQwC,aAAaf,UDlItC1B,EC4J4B,SAACxC,GAC7B,OAAO,SAACwC,EAAUyD,GACdzD,EAASC,IAAQyD,oBACjB1D,EAASC,IAAQ0D,sBACjB3D,EAASC,IAAQ2D,0BACjB5D,EAASC,IAAQ4D,yBAEjB,IAAIC,EAAM,IAAIC,KACVC,EAAY,IAAID,KAAKA,KAAKE,IAAIH,EAAII,cAAgB,EAAG,GAAI,IAAIC,UAoCjEzH,EAAM0H,IAAN,8BAAiC5G,EAAjC,mCAAiEwG,EAAjE,kBAAoFF,EAAIK,YACnFE,MAAK,SAAAC,GACF,IAAIC,EAAc,EACdC,EAAY,EACZC,EAAe,EACfC,EAAiB,EACrBlE,OAAOC,KAAK6D,EAAS3G,MAAMwD,KAAI,SAAAwD,GAC3B,IAAIC,EAAY,IAAIb,KAAKO,EAAS3G,KAAKgH,GAAOE,MAC9CN,GAAeO,WAAWR,EAAS3G,KAAKgH,GAAOI,KAAKC,YAChDJ,EAAUK,aAAenB,EAAImB,aAC7BR,GAAgBK,WAAWR,EAAS3G,KAAKgH,GAAOI,KAAKC,aAErDJ,EAAUK,aAAenB,EAAImB,WAAa,IAC1CT,GAAaM,WAAWR,EAAS3G,KAAKgH,GAAOI,KAAKC,aAElDV,EAAS3G,KAAKgH,GAAOO,UAAYzB,IAAW0B,KAAKC,KACjDV,OAIR1E,EAASC,IAAQW,gBAAgB2D,EAAatE,IAAQoF,kBACtDrF,EAASC,IAAQW,gBAAgB4D,EAAWvE,IAAQqF,yBACpDtF,EAASC,IAAQW,gBAAgB6D,EAAcxE,IAAQsF,oBACvDvF,EAASC,IAAQW,gBAAgB8D,EAAgBzE,IAAQuF,2BAE5DC,OAAM,SAAA/D,GACH1B,EAASC,IAAQwC,aAAaf,QDlOjCgE,CAA8BlI,M,+BAI/B,IACCmI,EADF,iBACiB5F,KAAKjE,OAC7B,OACE,oCAEE,kBAAC,IAAD,KACE,yBAAKH,MAAO6D,EAAOC,WACjB,kBAAC,EAAD,CAAYlE,MAAO,qBACjB,uBAAKI,MAAOiK,IAAWC,SAAUC,OAAQ,EAAGC,QAAQ,SAClD,uBAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWU,gBACnB9H,KAAK,qBACLM,QAAS,kBAAC,IAAD,CAAclD,MAAO,CAAE2K,SAAU,YAC1ClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWY,YACnBhI,KAAK,iBACLM,QAAS,kBAAC,IAAD,CAAOlD,MAAO,CAAE2K,SAAU,YACnClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWa,YACnBjI,KAAK,iBACLM,QAAS,kBAAC,IAAD,CAAWlD,MAAO,CAAE2K,SAAU,YACvClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWc,aACnBlI,KAAK,kBACLM,QAAS,kBAAC,IAAD,CAAelD,MAAO,CAAE2K,SAAU,YAC3ClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWe,WACnBnI,KAAK,gBACLM,QAAS,kBAAC,IAAD,CAAgBlD,MAAO,CAAE2K,SAAU,YAC5ClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWgB,SACnBpI,KAAK,cACLM,QAAS,kBAAC,IAAD,CAAWlD,MAAO,CAAE2K,SAAU,YACvClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWiB,aACnBrI,KAAK,kBACLM,QAAS,kBAAC,IAAD,CAAiBlD,MAAO,CAAE2K,SAAU,YAC7ClI,UAAU,UACVK,MAAM,aAGV,uBAAKuH,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,CACE9H,OAAQqH,EAAWkB,cACnBtI,KAAK,mBACLM,QAAS,kBAAC,IAAD,CAAclD,MAAO,CAAE2K,SAAU,YAC1ClI,UAAU,UACVK,MAAM,eAKd,uBAAK9C,MAAOiK,IAAWC,SAAUC,OAAQ,EAAGC,QAAQ,SAClD,uBAAKC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE7K,MAAO,qBACP8D,OAAQsG,EAAWmB,gBACnBxH,KAAK,IACL9D,QAAS,0CACT4C,UAAW,cAIjB,uBAAK4H,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE7K,MAAO,qBACP8D,OAAQsG,EAAWoB,oBACnBzH,KAAK,IACL9D,QAAS,0CACT4C,UAAW,cAIjB,uBAAK4H,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE7K,MAAO,kBAAiB,IAAIwI,MAAOG,cACnC7E,OAAQsG,EAAWqB,cACnB1H,KAAK,IACL9D,QAAS,0CACT4C,UAAW,cAIjB,uBAAK4H,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIxK,MAAOiK,IAAWQ,UACpD,kBAAC,EAAD,KACE,kBAAC,EAAD,CACE7K,MAAO,sBAAqB,IAAIwI,MAAOG,cACvC7E,OAAQsG,EAAWsB,oBACnB3H,KAAK,GACL9D,QAAS,0CACT4C,UAAW,sB,GA7IR8I,aAkLRC,uBAtBS,SAAAC,GAAU,IACvBC,EADsB,iBACZD,EAAME,OACzB,MAAO,CACL9J,MAAO4J,EAAMjC,KAAKoC,QAElBlB,gBAAiBgB,EAAMhB,gBACvBE,YAAac,EAAMd,YACnBC,YAAaa,EAAMb,YACnBC,aAAcY,EAAMZ,aACpBC,WAAYW,EAAMX,WAClBC,SAAUU,EAAMV,SAChBC,aAAcS,EAAMT,aACpBC,cAAeQ,EAAMR,cACrBC,gBAAiBO,EAAMP,gBACvBC,oBAAqBM,EAAMN,oBAC3BC,cAAeK,EAAML,cACrBC,oBAAqBI,EAAMJ,oBAC3BvF,MAAO2F,EAAM3F,SAKFyF,CAAyBrH,I,mWEzMxC,IAAM0H,E,MAAuBpM,EAAOC,IAAV,KCCX,aAAAS,GAAK,OAClB,kBAAC0L,EAAD,eACE9L,UACqB,MAAnBI,EAAMJ,UAAN,UACOI,EAAMJ,UADb,4BAEI,2BAEFI,GAEHA,EAAML,Y,iCCZJ,IAmCDmK,EAAa,CACjBC,SAZe,CACf9J,MAAO,OACP2D,QAAS,OACTC,SAAU,YAUVyG,SARe,CACfxK,aAAc,OACd6L,cAAe,OAOf3B,OALa,IAOAF,O,8FC1BA8B,IAVI,SAAA5L,GACf,OACI,yBAAKJ,UAAWI,EAAMiD,MAAOjD,EAAMiD,MAAQ,cACvC,uBAAOE,KAAOnD,EAAM6L,UAAsB7L,EAAM6L,UAAhB,SAC5B,uBAAM1I,KAAOnD,EAAMmD,KAAiBnD,EAAMmD,KAAhB,c","file":"static/js/22.33df11dd.chunk.js","sourcesContent":["import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst ReportWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 2)};\n\n  .isoWidgetLabel {\n    font-size: 21px;\n    color: ${palette('text', 0)};\n    font-weight: 400;\n    line-height: 1.2;\n    margin: 0 0 25px;\n  }\n\n  .isoReportsWidgetBar {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 25px;\n\n    .isoSingleProgressBar {\n      margin-bottom: 10px;\n\n      &:last-child {\n        margin-bottom: 0;\n      }\n    }\n  }\n\n  .isoDescription {\n    font-size: 13px;\n    color: ${palette('text', 2)};\n    font-weight: 400;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\n\nexport { ReportWidgetWrapper };\n","import React from 'react';\nimport { ReportWidgetWrapper } from './ReportWidget.styles';\n\nexport default function({ label, details, children }) {\n  return (\n    <ReportWidgetWrapper className=\"isoReportsWidget\" style={{marginBottom: '15px'}}>\n      <h3 className=\"isoWidgetLabel\">{label}</h3>\n\n      <div className=\"isoReportsWidgetBar\">{children}</div>\n\n      <p className=\"isoDescription\">{details}</p>\n    </ReportWidgetWrapper>\n  );\n}\n","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst WidgetWrapper = styled.div`\n  margin: 0 10px;\n  width: ${props => props.width}px;\n  margin-top: ${props => props.gutterTop}px;\n  margin-right: ${props => props.gutterRight}px;\n  margin-bottom: ${props => props.gutterBottom}px;\n  margin-left: ${props => props.gutterLeft}px;\n  padding: ${props => props.padding};\n  background-color: ${props => props.bgColor}px;\n  @media only screen and (max-width: 767) {\n    margin-right: 0 !important;\n  }\n`;\n\nconst WidgetBox = styled.div`\n  width: 100%;\n  height: ${props => (props.height ? `${props.height}px` : '100%')};\n  padding: ${props => (props.padding ? props.padding : '30px')};\n  background-color: #ffffff;\n  border: 1px solid ${palette('border', 2)};\n\n  canvas {\n    width: 100% !important;\n    height: 100% !important;\n  }\n`;\nconst getAlignContent = (align = 'flex-start') => {\n  if (align === 'start') return 'flex-start';\n  if (align === 'end') return 'flex-end';\n  return align;\n};\nconst WidgetColumn = styled.div`\n  align-content: ${props => getAlignContent(props.align)};\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: row;\n  margin-top: ${props => props.gutterTop}px;\n  margin-right: ${props => props.gutterRight}px;\n  margin-bottom: ${props => props.gutterBottom}px;\n  margin-left: ${props => props.gutterLeft}px;\n  padding: ${props => props.padding}px;\n  width: ${props => props.width}px;\n`;\n\nexport { WidgetWrapper, WidgetBox, WidgetColumn };\n","import React from 'react';\nimport { WidgetWrapper } from './Widgets.styles';\n\nexport default function({ children, ...props }) {\n  return (\n    <WidgetWrapper className=\"isoWidgetsWrapper\" {...props}>\n      {children}\n    </WidgetWrapper>\n  );\n}\n","import axios from 'axios';\r\n\r\nconst axiosInstance = axios.create(\r\n    {\r\n        baseURL: \"https://pos-tdgroup-drc.firebaseio.com/\"\r\n    }\r\n);\r\n\r\nexport default axiosInstance;","const handleCategories = {\r\n    //categories\r\n    GET_CATEGORIES: 'categoryList',\r\n    //any items\r\n    GET_CATEGORIES_SUCCESS: \"GET_CATEGORIES_SUCCESS\",\r\n    GET_CATEGORIES_FAIL: \"GET_CATEGORIES_FAIL\",\r\n    //add category to db\r\n    ADD_CATEGORIES: \"ADD_CATEGORIES_TO_DB\",\r\n    //remove category from db\r\n    DELETE_CATEGORIES: \"DELETE_CATEGORIES_FROM_DB\",\r\n    //update category in db\r\n    UPDATE_CATEGORIES: \"UPDATE_CATEGORIES_IN_DB\",\r\n\r\n    //categories\r\n    getCategories: payload => {\r\n        return { type: handleCategories.GET_CATEGORIES, payload, }\r\n    },\r\n    getCategoriesbySaga: token => {\r\n        return { type: handleCategories.GET_CATEGORIES_BY_SAGA, token, }\r\n    },\r\n    //ANY-ITEMS SUCCESS OR FAIL\r\n    getCategoriesSuccess: (payload, data) => {\r\n        return {\r\n            type: handleCategories.GET_CATEGORIES_SUCCESS,\r\n            payload: payload,\r\n            data: data,\r\n        }\r\n    },\r\n    getCategoriesFail: (payload, data) => {\r\n        return {\r\n            type: handleCategories.GET_CATEGORIES_FAIL,\r\n            payload,\r\n            data: data,\r\n        }\r\n    },\r\n\r\n    addCategory: (payload, id) => {\r\n        return {\r\n            type: handleCategories.ADD_CATEGORIES,\r\n            payload,\r\n            id: id,\r\n        }\r\n    },\r\n    deleteCategory: (payload, id) => {\r\n        return {\r\n            type: handleCategories.DELETE_CATEGORIES,\r\n            payload,\r\n            id: id,\r\n        }\r\n    },\r\n    updateCategory: (value, payload) => {\r\n        return {\r\n            type: handleCategories.UPDATE_CATEGORIES,\r\n            payload: payload,\r\n        }\r\n    },\r\n\r\n}\r\n\r\nexport default handleCategories;","import styled from 'styled-components';\nimport { borderRadius } from '@iso/lib/helpers/style_utils';\n\nconst StickerWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: stretch;\n  overflow: hidden;\n  ${borderRadius('5px')};\n\n  .isoIconWrapper {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 80px;\n    flex-shrink: 0;\n    background-color: rgba(0, 0, 0, 0.1);\n\n    i {\n      font-size: 30px;\n    }\n  }\n\n  .isoContentWrapper {\n    width: 100%;\n    padding: 20px 15px 20px 20px;\n    display: flex;\n    flex-direction: column;\n\n    .isoStatNumber {\n      font-size: 20px;\n      font-weight: 500;\n      line-height: 1.1;\n      margin: 0 0 5px;\n    }\n\n    .isoLabel {\n      font-size: 16px;\n      font-weight: 400;\n      margin: 0;\n      line-height: 1.2;\n    }\n  }\n`;\n\nexport { StickerWidgetWrapper };\n","import React from 'react';\nimport { StickerWidgetWrapper } from './StickerWidget.styles';\n\nexport default function ({ fontColor, bgColor, width, icon, number, text }) {\n  const textColor = {\n    color: fontColor,\n  };\n  const widgetStyle = {\n    backgroundColor: bgColor,\n    width: width,\n  };\n\n  return (\n    <StickerWidgetWrapper className=\"isoStickerWidget\" style={widgetStyle}>\n      <div className=\"isoIconWrapper\">{icon}</div>\n\n      <div className=\"isoContentWrapper\">\n        <h3 className=\"isoStatNumber\" style={textColor}>\n          {number}\n        </h3>\n        <span className=\"isoLabel\" style={textColor}>\n          {text}\n        </span>\n      </div>\n    </StickerWidgetWrapper>\n  );\n}\n","import React from 'react';\r\nimport IsoWidgetsWrapper from '@iso/containers/Widgets/WidgetsWrapper';\r\nimport StickerWidget from '@iso/containers/Widgets/Sticker/StickerWidget';\r\nimport AppSpinner from '../SpinnerWidget/SpinnerWidget';\r\n\r\nexport const StatsWidget = ({ number, text, IconLib, fontColor, color }) => {\r\n    return (\r\n        <IsoWidgetsWrapper>\r\n            {/* Sticker Widget */}\r\n            <StickerWidget\r\n                number={number && number}\r\n                text={number ? text : <AppSpinner class=\"-\" spaceSize=\"small\" size=\"small\"/>}\r\n                icon={IconLib}\r\n                fontColor={number? fontColor: \"#000\"}\r\n                bgColor={number ? color : \"#d3d3d3\"}\r\n            />\r\n\r\n        </IsoWidgetsWrapper>\r\n    )\r\n}","import styled from 'styled-components';\nimport { palette } from 'styled-theme';\n\nconst SaleWidgetWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 30px;\n  background-color: #ffffff;\n  overflow: hidden;\n  border: 1px solid ${palette('border', 2)};\n\n  .isoSaleLabel {\n    font-size: 14px;\n    font-weight: 700;\n    line-height: 1.2;\n    text-transform: uppercase;\n    color: ${palette('text', 0)};\n    margin: 0 0 20px;\n  }\n\n  .isoSalePrice {\n    font-size: 28px;\n    font-weight: 300;\n    line-height: 1.2;\n    margin: 0 0 20px;\n  }\n\n  .isoSaleDetails {\n    font-size: 13px;\n    font-weight: 400;\n    line-height: 1.5;\n    color: ${palette('text', 2)};\n    margin: 0;\n  }\n`;\n\nexport { SaleWidgetWrapper };\n","import React from 'react';\nimport { SaleWidgetWrapper } from './SaleWidget.styles';\n\nexport default function({ fontColor, label, price, details }) {\n  const textColor = {\n    color: fontColor,\n  };\n\n  return (\n    <SaleWidgetWrapper className=\"isoSaleWidget\">\n      <h3 className=\"isoSaleLabel\">{label}</h3>\n      <span className=\"isoSalePrice\" style={textColor}>\n        {price}\n      </span>\n      <p className=\"isoSaleDetails\">{details}</p>\n    </SaleWidgetWrapper>\n  );\n}\n","import React from 'react';\r\nimport IsoWidgetsWrapper from '@iso/containers/Widgets/WidgetsWrapper';\r\nimport SaleWidget from '@iso/containers/Widgets/Sale/SaleWidget';\r\nimport AppSpinner from '../SpinnerWidget/SpinnerWidget';\r\n\r\nexport const SalesWidget = ({ label, amount, details, fontColor, sign }) => {\r\n    return (\r\n        <IsoWidgetsWrapper>\r\n            <SaleWidget\r\n                label={label}\r\n                price={amount !== null ? sign + \" \" + amount : <AppSpinner size=\"small\" spaceSize=\"small\" class=\"-\"/>}\r\n                details={details}\r\n                fontColor={fontColor}\r\n            />\r\n        </IsoWidgetsWrapper>\r\n    )\r\n}","import React, { Component } from 'react';\nimport { Row, Col } from 'antd';\nimport basicStyle from '@iso/assets/styles/constants';\nimport LayoutWrapper from '@iso/components/utility/layoutWrapper';\n// import LayoutContent from '@iso/components/utility/layoutContent';\nimport InfoWidget from '@iso/containers/Widgets/Report/ReportWidget';\nimport WidgetWrapper from '@iso/containers/Widgets/WidgetsWrapper';\nimport { FaBox, FaDollarSign, FaLayerGroup, FaLocationArrow, FaToolbox, FaTruckLoading, FaUserAlt, FaUserFriends } from 'react-icons/fa';\n// import axios from 'axios';\nimport { connect } from 'react-redux';\nimport * as statsActions from '@iso/redux/stats/actionCreators';\nimport { StatsWidget } from '../components/StatsWidget/StatsWidget';\nimport { SalesWidget } from '../components/SalesWidget/SalesWidget';\n// import LoaderComponent from '@iso/components/utility/loader';\n\nconst styles = {\n  PageStyle: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    alignItems: 'flex-start',\n    overflow: 'hidden',\n  },\n};\n\n\nclass HomePage extends Component {\n\n\n\n  componentDidMount() {\n    let { token, dispatch } = this.props;\n    dispatch(statsActions.getNumTransactions(token));\n    dispatch(statsActions.getNumProducts(token));\n    dispatch(statsActions.getNumCustomers(token));\n    dispatch(statsActions.getNumVendors(token));\n    dispatch(statsActions.getNumUsers(token));\n    dispatch(statsActions.getNumLocations(token));\n    dispatch(statsActions.getNumCategories(token));\n    dispatch(statsActions.getNumRevenueYTD(token));\n\n  }\n\n  render() {\n    let { ...properties } = this.props;\n    return (\n      <>\n        {/* <LoaderComponent /> */}\n        <LayoutWrapper>\n          <div style={styles.PageStyle}>\n            <InfoWidget label={\"T&D Group S.A.R.L\"}>\n              <Row style={basicStyle.rowStyle} gutter={0} justify=\"start\">\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numTransactions}\n                    text=\"Total Transactions\"\n                    IconLib={<FaDollarSign style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numProducts}\n                    text=\"Total Products\"\n                    IconLib={<FaBox style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numServices}\n                    text=\"Total Services\"\n                    IconLib={<FaToolbox style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numCustomers}\n                    text=\"Total Customers\"\n                    IconLib={<FaUserFriends style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numVendors}\n                    text=\"Total Vendors\"\n                    IconLib={<FaTruckLoading style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numUsers}\n                    text=\"Total Users\"\n                    IconLib={<FaUserAlt style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numLocations}\n                    text=\"Total Locations\"\n                    IconLib={<FaLocationArrow style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n                <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                  <StatsWidget\n                    number={properties.numCategories}\n                    text=\"Total Categories\"\n                    IconLib={<FaLayerGroup style={{ fontSize: '1.5rem' }} />}\n                    fontColor=\"#ffffff\"\n                    color=\"#7ED321\"\n                  />\n                </Col>\n              </Row>\n            </InfoWidget>\n            <Row style={basicStyle.rowStyle} gutter={0} justify=\"start\">\n              <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                <WidgetWrapper>\n                  <SalesWidget\n                    label={\"Revenue this month\"}\n                    amount={properties.numRevenueMonth}\n                    sign=\"$\"\n                    details={\"This is a sample sales widget, aka 2020\"}\n                    fontColor={\"#f0cf33\"}\n                  />\n                </WidgetWrapper>\n              </Col>\n              <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                <WidgetWrapper>\n                  <SalesWidget\n                    label={\"Revenue Last Month\"}\n                    amount={properties.numRevenuePrevMonth}\n                    sign=\"$\"\n                    details={\"This is a sample sales widget, aka 2020\"}\n                    fontColor={\"#f0cf33\"}\n                  />\n                </WidgetWrapper>\n              </Col>\n              <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                <WidgetWrapper>\n                  <SalesWidget\n                    label={\"TOTAL REVENUE \"+new Date().getFullYear()}\n                    amount={properties.numRevenueYTD}\n                    sign=\"$\"\n                    details={\"This is a sample sales widget, aka 2020\"}\n                    fontColor={\"#f0cf33\"}\n                  />\n                </WidgetWrapper>\n              </Col>\n              <Col lg={6} md={12} sm={12} xs={24} style={basicStyle.colStyle}>\n                <WidgetWrapper>\n                  <SalesWidget\n                    label={\"USER TRANSACTIONS \"+new Date().getFullYear()}\n                    amount={properties.numTransactionsUser}\n                    sign=\"\"\n                    details={\"This is a sample sales widget, aka 2020\"}\n                    fontColor={\"#f0cf33\"}\n                  />\n                </WidgetWrapper>\n              </Col>\n            </Row>\n          </div>\n        </LayoutWrapper>\n\n\n\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  let { ...stats } = state.Stats;\n  return {\n    token: state.Auth.idToken,\n\n    numTransactions: stats.numTransactions,\n    numProducts: stats.numProducts,\n    numServices: stats.numServices,\n    numCustomers: stats.numCustomers,\n    numVendors: stats.numVendors,\n    numUsers: stats.numUsers,\n    numLocations: stats.numLocations,\n    numCategories: stats.numCategories,\n    numRevenueMonth: stats.numRevenueMonth,\n    numRevenuePrevMonth: stats.numRevenuePrevMonth,\n    numRevenueYTD: stats.numRevenueYTD,\n    numTransactionsUser: stats.numTransactionsUser,\n    error: stats.error,\n  }\n}\n\n\nexport default connect(mapStateToProps)(HomePage);","import axios from \"../../config/axios-config/axios-instance\";\r\nimport actions from './actions';\r\nimport categoriesActions from '../categories/actions';\r\nimport vendorsActions from '../vendors/actions';\r\nimport customersActions from '../customers/actions';\r\nimport salesActions from '../sales/actions';\r\nimport locationActions from '../locations/actions';\r\nimport { rtdb } from '../../library/firebase/firebase';\r\n\r\n\r\nexport const getNumTransactions = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getTransactions());\r\n        let orders = rtdb.ref(`catOrders`)\r\n        orders.on('value', snapshot => {\r\n            let numTrans = Object.keys(snapshot.val()).length;\r\n            dispatch(actions.getItemsSuccess(numTrans, actions.GET_NUMBER_TRANSACTIONS));\r\n        })\r\n        // axios.get(`catOrders.json?auth=${token}&shallow=true`)\r\n        //     .then(response => {\r\n        //         let numTrans = Object.keys(response.data).length;\r\n        //         dispatch(actions.getItemsSuccess(numTrans, actions.GET_NUMBER_TRANSACTIONS));\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\nexport const getNumProducts = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumProducts());\r\n        dispatch(actions.getNumServices());\r\n        let inventory = rtdb.ref('catStore/HeadQuarters/inventory/');\r\n        inventory.on('value', snapshot => {\r\n            let productsNum = 0;\r\n            let servicesNum = 0;\r\n            let inventory = snapshot.val();\r\n            Object.keys(snapshot.val()).map(item => {\r\n                if (item !== 'Services') {\r\n                    productsNum += Object.keys(inventory[item]).length;\r\n                }\r\n                else {\r\n                    servicesNum += Object.keys(inventory[item]).length;\r\n                }\r\n                return null;\r\n            });\r\n            dispatch(salesActions.itemsSuccess(snapshot.val(), salesActions.GET_PRODUCTS));\r\n            dispatch(actions.getItemsSuccess(productsNum, actions.GET_NUMBER_PRODUCTS));\r\n            dispatch(actions.getItemsSuccess(servicesNum, actions.GET_NUMBER_SERVICES));\r\n        }, (error) => {\r\n            console.log('error: ', error);\r\n        })\r\n\r\n        // axios.get(`catStore/HeadQuarters/inventory.json?auth=${token}&shallow=true`)\r\n        //     .then(response => {\r\n        //         let counter = 0;\r\n        //         let servicesCounter = 0;\r\n        //         Object.keys(response.data).map(category => {\r\n        //             axios.get(`catStore/HeadQuarters/inventory/${category}.json?auth=${token}&shallow=true`)\r\n        //                 .then(resp => {\r\n\r\n        //                     if (category !== \"Services\") {\r\n        //                         counter += parseInt(Object.keys(resp.data).length);\r\n        //                     } else {\r\n        //                         servicesCounter += parseInt(Object.keys(resp.data).length);\r\n        //                     }\r\n        //                     dispatch(actions.getItemsSuccess(counter, actions.GET_NUMBER_PRODUCTS));\r\n        //                     dispatch(actions.getItemsSuccess(servicesCounter, actions.GET_NUMBER_SERVICES));\r\n        //                 })\r\n\r\n        //             return;\r\n        //         })\r\n\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\n// export const getNumServices = (token) => {\r\n//     return dispatch => {\r\n//         dispatch(actions.getNumServices());\r\n//         axios.get('catStore/HeadQuarters/inventory/Services.json?auth=' + token)\r\n//             .then(response => {\r\n//                 dispatch(actions.getItemsSuccess(Object.keys(response.data).length, actions.GET_NUMBER_SERVICES));\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch(actions.getItemsFail(error));\r\n//             })\r\n//     }\r\n// }\r\n\r\nexport const getNumCustomers = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumCustomers());\r\n        let customers = rtdb.ref('customers/HeadQuarters');\r\n        customers.orderByChild('name').on('value', snapshot => {\r\n            let data = [];\r\n            snapshot.forEach(child => {\r\n                let x = child.val();\r\n                x = { ...x, name: x.name.toUpperCase() }\r\n                data.push(x);\r\n            })\r\n            dispatch(customersActions.getCustomersSuccess(data, customersActions.GET_CUSTOMERS));\r\n            dispatch(actions.getItemsSuccess(data.length, actions.GET_NUMBER_CUSTOMERS));\r\n        }, error => {\r\n            dispatch(actions.getItemsFail(error));\r\n        })\r\n        // axios.get('customers/HeadQuarters.json?auth=' + token)\r\n        //     .then(response => {\r\n        //         dispatch(actions.getItemsSuccess(Object.keys(response.data).length, actions.GET_NUMBER_CUSTOMERS));\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\nexport const getNumVendors = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumVendors());\r\n        let vendors = rtdb.ref('vendors/HeadQuarters/');\r\n        vendors.on('value', snapshot => {\r\n            dispatch(vendorsActions.getVendorsSuccess(snapshot.val(), vendorsActions.GET_VENDORS));\r\n            dispatch(actions.getItemsSuccess(Object.keys(snapshot.val()).length, actions.GET_NUMBER_VENDORS));\r\n        }, error => {\r\n            dispatch(actions.getItemsFail(error));\r\n        })\r\n        // axios.get('vendors/HeadQuarters.json?auth=' + token)\r\n        //     .then(response => {\r\n        //         dispatch(actions.getItemsSuccess(Object.keys(response.data).length, actions.GET_NUMBER_VENDORS));\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\n\r\nexport const getNumUsers = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumUsers());\r\n        let users = rtdb.ref('users');\r\n        users.on('value', snapshot => {\r\n            dispatch(actions.getItemsSuccess(Object.keys(snapshot.val()).length, actions.GET_NUMBER_USERS));\r\n        }, error => {\r\n            dispatch(actions.getItemsFail(error));\r\n        })\r\n        // axios.get('users.json?auth=' + token)\r\n        //     .then(response => {\r\n        //         dispatch(actions.getItemsSuccess(Object.keys(response.data).length, actions.GET_NUMBER_USERS));\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\nexport const getNumCategories = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumCategories());\r\n        let categories = rtdb.ref('categories');\r\n        categories.on('value', snapshot => {\r\n            dispatch(categoriesActions.getCategoriesSuccess(snapshot.val(), categoriesActions.GET_CATEGORIES));\r\n            dispatch(actions.getItemsSuccess(Object.keys(snapshot.val()).length, actions.GET_NUMBER_CATEGORIES));\r\n        }, error => {\r\n            dispatch(actions.getItemsFail(error));\r\n        })\r\n    }\r\n}\r\n\r\nexport const getNumLocations = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getNumLocations());\r\n        let locations = rtdb.ref('locations');\r\n        locations.on('value', snapshot => {\r\n            dispatch(locationActions.getLocationsSuccess(snapshot.val(), locationActions.GET_LOCATIONS));\r\n            dispatch(actions.getItemsSuccess(Object.keys(snapshot.val()).length, actions.GET_NUMBER_LOCATIONS));\r\n        }, error => {\r\n            dispatch(actions.getItemsFail(error));\r\n        })\r\n        // axios.get(`locations.json?auth=${token}&shallow=true`)\r\n        //     .then(response => {\r\n        //         dispatch(actions.getItemsSuccess(Object.keys(response.data).length, actions.GET_NUMBER_LOCATIONS));\r\n        //     })\r\n        //     .catch(error => {\r\n        //         dispatch(actions.getItemsFail(error));\r\n        //     })\r\n    }\r\n}\r\n\r\n\r\nexport const getNumRevenueYTD = (token) => {\r\n    return (dispatch, getState) => {\r\n        dispatch(actions.getNumRevenueYTD());\r\n        dispatch(actions.getNumRevenueMonth());\r\n        dispatch(actions.getNumRevenuePrevMonth());\r\n        dispatch(actions.getTransactionsByUser());\r\n        //year to date\r\n        let dat = new Date();\r\n        var yearStart = new Date(Date.UTC(dat.getFullYear() - 1, 11, 0)).getTime();\r\n        // //previous month\r\n        // var lastMonthStart = new Date(Date.UTC(dat.getFullYear(), dat.getMonth() - 1, 0)).getTime();\r\n        // var lastMonthEnd = new Date(Date.UTC(dat.getFullYear(), dat.getMonth(), 0)).getTime();\r\n        // // //current month\r\n        // var lastMonthEnd = new Date(Date.UTC(dat.getFullYear(), dat.getMonth(), 0)).getTime();\r\n        // var thisMonthEnd = new Date(Date.UTC(dat.getFullYear(), dat.getMonth() + 1, 0)).getTime();\r\n\r\n        // let orders = rtdb.ref(`catOrders`).orderByChild('time').startAt(yearStart).endAt(dat.getTime())\r\n\r\n        // orders.on('value', snapshot => {\r\n        //     let countAnnual = 0;\r\n        //     let lastMonth = 0;\r\n        //     let currentMonth = 0;\r\n        //     let myTransactions = 0;\r\n        //     Object.keys(snapshot.val()).map(order => {\r\n        //         let orderDate = new Date(snapshot.val()[order].time);\r\n        //         countAnnual += parseFloat(snapshot.val()[order].bill.grandtotal);\r\n        //         if (orderDate.getMonth() === dat.getMonth()) {\r\n        //             currentMonth += parseFloat(snapshot.val()[order].bill.grandtotal);\r\n        //         }\r\n        //         if (orderDate.getMonth() === dat.getMonth() - 1) {\r\n        //             lastMonth += parseFloat(snapshot.val()[order].bill.grandtotal);\r\n        //         }\r\n        //         if (snapshot.val()[order].cashier === getState().Auth.uid) {\r\n        //             myTransactions++;\r\n        //         }\r\n        //         return;\r\n        //     });\r\n        //     dispatch(actions.getItemsSuccess(countAnnual, actions.GET_REVENUE_YTD));\r\n        //     dispatch(actions.getItemsSuccess(lastMonth, actions.GET_REVENUE_PREV_MONTH));\r\n        //     dispatch(actions.getItemsSuccess(currentMonth, actions.GET_REVENUE_MONTH));\r\n        //     dispatch(actions.getItemsSuccess(myTransactions, actions.GET_TRANSACTIONS_USER));\r\n        // }, error => {\r\n        //     dispatch(actions.getItemsFail(error));\r\n        // })\r\n        axios.get(`catOrders.json?auth=${token}&orderBy=\"time\"&startAt=${yearStart}&endAt=${dat.getTime()}`)\r\n            .then(response => {\r\n                let countAnnual = 0;\r\n                let lastMonth = 0;\r\n                let currentMonth = 0;\r\n                let myTransactions = 0;\r\n                Object.keys(response.data).map(order => {\r\n                    let orderDate = new Date(response.data[order].time);\r\n                    countAnnual += parseFloat(response.data[order].bill.grandtotal);\r\n                    if (orderDate.getMonth() === dat.getMonth()) {\r\n                        currentMonth += parseFloat(response.data[order].bill.grandtotal);\r\n                    }\r\n                    if (orderDate.getMonth() === dat.getMonth() - 1) {\r\n                        lastMonth += parseFloat(response.data[order].bill.grandtotal);\r\n                    }\r\n                    if (response.data[order].cashier === getState().Auth.uid) {\r\n                        myTransactions++;\r\n                    }\r\n                    return;\r\n                })\r\n                dispatch(actions.getItemsSuccess(countAnnual, actions.GET_REVENUE_YTD));\r\n                dispatch(actions.getItemsSuccess(lastMonth, actions.GET_REVENUE_PREV_MONTH));\r\n                dispatch(actions.getItemsSuccess(currentMonth, actions.GET_REVENUE_MONTH));\r\n                dispatch(actions.getItemsSuccess(myTransactions, actions.GET_TRANSACTIONS_USER));\r\n            })\r\n            .catch(error => {\r\n                dispatch(actions.getItemsFail(error));\r\n            })\r\n    }\r\n}","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n  paddingBottom: '5px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n","import { Space, Spin } from 'antd';\r\nimport React from 'react';\r\nimport './SpinnerWidget.css';\r\n\r\nconst AppSpinner = props => {\r\n    return (\r\n        <div className={props.class? props.class : 'SpinnerDiv'}>\r\n            <Space size={!props.SpaceSize ? \"large\" : props.SpaceSize}>\r\n                <Spin size={!props.size ? \"large\" : props.size} />\r\n            </Space>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppSpinner;"],"sourceRoot":""}