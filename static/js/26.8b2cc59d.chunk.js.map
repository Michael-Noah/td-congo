{"version":3,"sources":["pages/locations/Locations.js","../../../shared/redux/locations/actionCreators.js","../../../shared/components/utility/layoutWrapper.style.js","../../../shared/components/utility/layoutWrapper.js","../../../shared/assets/styles/constants.js"],"names":["styles","PageStyle","display","flexFlow","alignItems","overflow","tabsStyle","height","overflowY","outTableStyle","LocationPage","state","imageReady","index","val","setState","prevState","dispatch","this","props","locationList","actions","getLocations","rtdb","ref","on","snapshot","getLocationsSuccess","GET_LOCATIONS","locationCards","Object","keys","map","location","key","span","loading","cover","hidden","alt","onLoad","src","SettingOutlined","EditOutlined","EllipsisOutlined","avatar","title","name","description","country","address","phone","email","style","basicStyle","rowStyle","gutter","React","Component","connect","token","Auth","idToken","Locations","Sales","LayoutContentWrapper","styled","div","className","children","width","colStyle","marginBottom","paddingBottom"],"mappings":"2WAWMA,EAAS,CACXC,UAAW,CACPC,QAAS,OACTC,SAAU,WACVC,WAAY,aACZC,SAAU,UAEdC,UAAW,CACPC,OAAQ,OAAQC,UAAW,SAAUH,SAAU,QAGnDI,cAAe,CACXD,UAAW,SAAUH,SAAU,OAAQE,OAAQ,SAOjDG,E,4MAEFC,MAAQ,CACJC,WAAY,I,EAGhBA,WAAa,SAACC,EAAOC,GACjB,EAAKC,UAAS,SAACC,GAAD,MAAgB,CAC1BJ,WAAW,2BACJI,EAAUJ,YADP,kBAELC,EAAQC,S,kEAKA,IACXG,EAAaC,KAAKC,MAAlBF,UACLC,KAAKC,MAAMC,cAAgBH,GCxCzB,SAAAA,GACHA,EAASI,IAAQC,gBACDC,IAAKC,IAAL,cACNC,GAAG,SAAS,SAAAC,GAClBT,EAASI,IAAQC,gBAEjBL,EAASI,IAAQM,oBAAoBD,EAASZ,MAAOO,IAAQO,wB,+BDsC3D,IAAD,OACCR,EAAiBF,KAAKC,MAAtBC,aACFS,EAAgB,GAuCpB,OAtCIT,IACAS,EAAgBC,OAAOC,KAAKX,GAAcY,KAAI,SAACC,EAAUpB,GACrD,OACI,uBAAKqB,IAAKD,EAAUE,KAAM,GACtB,uBACIC,SAAU,EAAKzB,MAAMC,WAAWC,GAChCqB,IAAKD,EACLI,MAAO,yBACHC,QAAS,EAAK3B,MAAMC,WAAWC,GAC/B0B,IAAI,UACJC,OAAQ,WAAQ,EAAK5B,WAAWC,GAAO,IACvC4B,IAAI,wCAGRpB,QAAS,CACL,kBAACqB,EAAA,EAAD,CAAiBR,IAAI,YACrB,kBAACS,EAAA,EAAD,CAAcT,IAAI,SAClB,kBAACU,EAAA,EAAD,CAAkBV,IAAI,eAG1B,kBAAC,IAAD,CACIW,OAAQ,uBAAQJ,IAAI,qCACpBK,MAAO1B,EAAaa,GAAUc,KAC9BC,YACI,6BACI,2BAAG,6CAA2B5B,EAAaa,GAAUgB,SACrD,2BAAG,6CAA2B7B,EAAaa,GAAUiB,SACrD,2BAAG,2CAAyB9B,EAAaa,GAAUkB,OACnD,2BAAG,2CAAyB/B,EAAaa,GAAUmB,OACnD,2BAAG,mDAAiChC,EAAaa,GAAUmB,gBAUvF,kBAAC,IAAD,CAAsBC,MAAOrD,EAAOC,WAChC,uBAAKoD,MAAOC,IAAWC,SAAUC,OAAQ,CAAC,GAAI,KACzC3B,Q,GAjEM4B,IAAMC,WAiFlBC,uBARS,SAAAhD,GACpB,MAAO,CACHiD,MAAOjD,EAAMkD,KAAKC,QAClB1C,aAAcT,EAAMoD,UAAU3C,aAC9BgB,QAASzB,EAAMqD,MAAM5B,WAIduB,CAAyBjD,I,mWE7GxC,IAAMuD,E,MAAuBC,EAAOC,IAAV,KCCX,aAAAhD,GAAK,OAClB,kBAAC8C,EAAD,eACEG,UACqB,MAAnBjD,EAAMiD,UAAN,UACOjD,EAAMiD,UADb,4BAEI,2BAEFjD,GAEHA,EAAMkD,Y,iCCZJ,IAmCDf,EAAa,CACjBC,SAZe,CACfe,MAAO,OACPpE,QAAS,OACTC,SAAU,YAUVoE,SARe,CACfC,aAAc,OACdC,cAAe,OAOfjB,OALa,IAOAF","file":"static/js/26.8b2cc59d.chunk.js","sourcesContent":["import React from 'react';\r\nimport LayoutContentWrapper from '@iso/components/utility/layoutWrapper';\r\nimport basicStyle from '@iso/assets/styles/constants';\r\nimport { EditOutlined, EllipsisOutlined, SettingOutlined } from '@ant-design/icons';\r\nimport * as locationsActions from '@iso/redux/locations/actionCreators';\r\nimport { Card, Col, Row, Avatar } from 'antd';\r\n// import { itemExistsInAny } from '@iso/lib/helpers/ItemSearchString';\r\nimport { connect } from 'react-redux';\r\nimport Meta from 'antd/lib/card/Meta';\r\n\r\n\r\nconst styles = {\r\n    PageStyle: {\r\n        display: 'flex',\r\n        flexFlow: 'row wrap',\r\n        alignItems: 'flex-start',\r\n        overflow: 'hidden',\r\n    },\r\n    tabsStyle: {\r\n        height: '70vh', overflowY: 'scroll', overflow: 'auto'\r\n    },\r\n\r\n    outTableStyle: {\r\n        overflowY: 'scroll', overflow: 'auto', height: \"35vh\"\r\n    },\r\n};\r\n\r\n\r\n\r\n\r\nclass LocationPage extends React.Component {\r\n\r\n    state = {\r\n        imageReady: {},\r\n    }\r\n\r\n    imageReady = (index, val) => {\r\n        this.setState((prevState) => ({\r\n            imageReady: {\r\n                ...prevState.imageReady,\r\n                [index]: val\r\n            }\r\n        }));\r\n    }\r\n\r\n    componentDidMount() {\r\n        let { dispatch } = this.props;\r\n        !this.props.locationList && dispatch(locationsActions.getLocations());\r\n    }\r\n\r\n\r\n    render() {\r\n        let { locationList } = this.props;\r\n        let locationCards = [];\r\n        if (locationList) {\r\n            locationCards = Object.keys(locationList).map((location, index) => {\r\n                return (\r\n                    <Col key={location} span={6}>\r\n                        <Card\r\n                            loading={!this.state.imageReady[index]}\r\n                            key={location}\r\n                            cover={<img\r\n                                hidden={!this.state.imageReady[index]}\r\n                                alt=\"example\"\r\n                                onLoad={() => { this.imageReady(index, true) }}\r\n                                src=\"https://www.placecage.com/c/640/480\"\r\n                            />\r\n                            }\r\n                            actions={[\r\n                                <SettingOutlined key=\"setting\" />,\r\n                                <EditOutlined key=\"edit\" />,\r\n                                <EllipsisOutlined key=\"ellipsis\" />,\r\n                            ]}\r\n                        >\r\n                            <Meta\r\n                                avatar={<Avatar src=\"https://www.placecage.com/100/50\" />}\r\n                                title={locationList[location].name}\r\n                                description={\r\n                                    <div>\r\n                                        <p><strong>Country: </strong>{locationList[location].country}</p>\r\n                                        <p><strong>Address: </strong>{locationList[location].address}</p>\r\n                                        <p><strong>Phone: </strong>{locationList[location].phone}</p>\r\n                                        <p><strong>Email: </strong>{locationList[location].email}</p>\r\n                                        <p><strong>User Accounts: </strong>{locationList[location].email}</p>\r\n                                    </div>\r\n                                }\r\n                            />\r\n                        </Card>\r\n                    </Col>\r\n                )\r\n            })\r\n        }\r\n        return (\r\n            <LayoutContentWrapper style={styles.PageStyle}>\r\n                <Row style={basicStyle.rowStyle} gutter={[16, 16]}>\r\n                    {locationCards}\r\n                </Row>\r\n            </LayoutContentWrapper>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        token: state.Auth.idToken,\r\n        locationList: state.Locations.locationList,\r\n        loading: state.Sales.loading,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LocationPage);","// import axios from \"@iso/config/axios-config/axios-instance\";\r\nimport actions from './actions';\r\nimport { rtdb } from \"../../library/firebase/firebase\";\r\n\r\n\r\n\r\nexport const getLocations = (token) => {\r\n    return dispatch => {\r\n        dispatch(actions.getLocations());\r\n        let locations = rtdb.ref(`locations/`);\r\n        locations.on('value', snapshot => {\r\n            dispatch(actions.getLocations());\r\n            // console.log(snapshot.val());\r\n            dispatch(actions.getLocationsSuccess(snapshot.val(), actions.GET_LOCATIONS));\r\n        });\r\n    }\r\n}\r\n","import styled from 'styled-components';\n\nconst LayoutContentWrapper = styled.div`\n  padding: 40px 20px;\n  display: flex;\n  flex-flow: row wrap;\n  overflow: hidden;\n\n  @media only screen and (max-width: 767px) {\n    padding: 50px 20px;\n  }\n\n  @media (max-width: 580px) {\n    padding: 15px;\n  }\n`;\n\nexport { LayoutContentWrapper };\n","import React from 'react';\nimport { LayoutContentWrapper } from './layoutWrapper.style';\n\nexport default props => (\n  <LayoutContentWrapper\n    className={\n      props.className != null\n        ? `${props.className} isoLayoutContentWrapper`\n        : 'isoLayoutContentWrapper'\n    }\n    {...props}\n  >\n    {props.children}\n  </LayoutContentWrapper>\n);\n","export const colors = {\n  blue: {\n    deep: 'rgb(0, 121, 191)',\n    light: 'lightblue',\n    lighter: '#d9fcff',\n    soft: '#E6FCFF',\n  },\n  black: '#4d4d4d',\n  shadow: 'rgba(0,0,0,0.2)',\n  grey: {\n    darker: '#C1C7D0',\n    dark: '#E2E4E6',\n    medium: '#DFE1E5',\n    N30: '#EBECF0',\n    light: '#F4F5F7',\n  },\n  green: 'rgb(185, 244, 188)',\n  white: 'white',\n  purple: 'rebeccapurple',\n  orange: '#FF991F',\n};\nexport const grid = 8;\n\nexport const borderRadius = 2;\nconst rowStyle = {\n  width: '100%',\n  display: 'flex',\n  flexFlow: 'row wrap',\n};\nconst colStyle = {\n  marginBottom: '16px',\n  paddingBottom: '5px',\n};\nconst gutter = 16;\n\nconst basicStyle = {\n  rowStyle,\n  colStyle,\n  gutter,\n};\nexport default basicStyle;\n"],"sourceRoot":""}